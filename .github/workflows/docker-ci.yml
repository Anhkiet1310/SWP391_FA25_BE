name: Build & Push Docker Image

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Overwrite appsettings.json from secrets
        run: |
          echo "📝 Overwriting appsettings.json from secrets..."
          echo "${{ secrets.APPSETTINGS_JSON }}" > ./appsettings.json
          echo "✅ appsettings.json overwritten successfully!"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_IMAGE }}:latest

      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
              echo "🔄 Pulling latest image..."
              docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_IMAGE }}:latest

              echo "🧹 Cleaning up any container using port 8080..."
              # Find any container currently using port 8080 and remove it
              docker ps -q --filter "publish=8080" | xargs -r docker stop
              docker ps -aq --filter "publish=8080" | xargs -r docker rm

              echo "🚀 Starting new container on port 8080..."
              docker stop myapp || true
              docker rm myapp || true
              docker run -d -p 8080:8080 --name myapp ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_IMAGE }}:latest


